// src/types/leaseRevenueTypes.ts

export interface BaseEntity {
  CreatedBy?: string;
  CreatedOn?: string;
  CreatedID?: number;
  UpdatedBy?: string;
  UpdatedOn?: string;
  UpdatedID?: number;
  DeletedBy?: string;
  DeletedOn?: string;
  DeletedID?: number;
  RecordStatus?: number;
}

// ========== Core Lease Revenue Types ==========

export interface LeaseRevenueData extends BaseEntity {
  ContractUnitID: number;
  LeaseNo: string;
  Property: string;
  UnitNo: string;
  CustomerName: string;
  ContractStartDate: string | Date;
  ContractEndDate: string | Date;
  StartDate: string | Date;
  EndDate: string | Date;
  TotalLeaseDays: number;
  ContractValue: number;
  RentPerDay: number;
  PostingAmount: number;
  Balance: number;
  Narration: string;
  ContractStatus: string;
  IsPosted: boolean;
  DaysToCalculate: number;
  DebitAmount: number;
  CreditAmount: number;
  Posted: number;

  // Additional fields for display
  ContractID?: number;
  CustomerID?: number;
  PropertyID?: number;
  UnitID?: number;
  RentPerMonth?: number;
  RentPerYear?: number;
}

export interface PostedLeaseRevenueEntry extends BaseEntity {
  PostingID: number;
  VoucherNo: string;
  TransactionDate: string | Date;
  PostingDate: string | Date;
  AccountID: number;
  AccountCode: string;
  AccountName: string;
  TransactionType: string; // 'Debit' or 'Credit'
  DebitAmount: number;
  CreditAmount: number;
  Description: string;
  Narration: string;
  ContractUnitID?: number;
  UnitID?: number;
  UnitNo?: string;
  PropertyName?: string;
  ContractNo?: string;
  CustomerFullName?: string;
  PostingStatus: string;
}

export interface LeaseRevenuePosting extends BaseEntity {
  PostingID: number;
  VoucherNo: string;
  VoucherType: string;
  TransactionDate: string | Date;
  PostingDate: string | Date;
  CompanyID: number;
  FiscalYearID: number;
  AccountID: number;
  TransactionType: string;
  DebitAmount: number;
  CreditAmount: number;
  CurrencyID: number;
  ExchangeRate?: number;
  BaseCurrencyAmount: number;
  ReferenceType?: string;
  ReferenceID?: number;
  ReferenceNo?: string;
  CustomerID?: number;
  Description: string;
  Narration?: string;
  IsReversed: boolean;
  ReversedBy?: number;
  ReversedOn?: string | Date;
  ReversalReason?: string;
  ReversalPostingID?: number;
  IsAutoGenerated: boolean;
  SourceModule?: string;
  PostingStatus: string;
  ApprovalStatus: string;
  RequiresApproval: boolean;
  ApprovalComments?: string;
  BaseAmount: number;
  IsTaxInclusive: boolean;
}

// ========== Request Types ==========

export interface LeaseRevenueSearchRequest {
  PropertyID?: number;
  UnitID?: number;
  PeriodFrom: string | Date;
  PeriodTo: string | Date;
  IncludePMUnits?: boolean;
  ShowUnpostedOnly?: boolean;
  CompanyID?: number;
  FiscalYearID?: number;
}

export interface LeaseRevenuePostingRequest {
  CompanyID: number;
  FiscalYearID: number;
  CurrencyID?: number;
  PeriodFrom: string | Date;
  PeriodTo: string | Date;
  DebitAccountID: number;
  CreditAccountID: number;
  PostingDate?: string | Date;
  VoucherNo?: string;
  RefNo?: string;
  Narration?: string;
  PrintVoucher?: boolean;
  SelectedContractUnits: SelectedContractUnitForPosting[];
}

export interface SelectedContractUnitForPosting {
  ContractUnitID: number;
  PostingAmount: number;
  Narration: string;
}

export interface BatchPostingRequest {
  PostingDate: string | Date;
  CompanyID: number;
  FiscalYearID: number;
  CurrencyID?: number;
  DebitAccountID: number;
  CreditAccountID: number;
  PeriodFrom: string | Date;
  PeriodTo: string | Date;
  ContractUnitsJSON: string;
  VoucherNo?: string;
  RefNo?: string;
  Narration?: string;
}

export interface PostingReversalRequest {
  VoucherNo: string;
  PostingDate?: string | Date;
  CompanyID: number;
}

// ========== Search and Filter Types ==========

export interface LeaseRevenueSearchParams {
  searchText?: string;
  FilterPropertyID?: number;
  FilterUnitID?: number;
  FilterCustomerID?: number;
  FilterContractID?: number;
  PeriodFrom: string | Date;
  PeriodTo: string | Date;
  IncludePMUnits?: boolean;
  ShowUnpostedOnly?: boolean;
  FilterPostedOnly?: boolean;
  FilterUnpostedOnly?: boolean;
  FilterContractStatus?: string;
  CompanyID: number;
  FiscalYearID?: number;
}

export interface PostedEntriesSearchParams {
  FilterPropertyID?: number;
  FilterUnitID?: number;
  FilterCustomerID?: number;
  FilterContractID?: number;
  FilterVoucherNo?: string;
  FilterAccountID?: number;
  FilterPostingStatus?: string;
  PeriodFrom: string | Date;
  PeriodTo: string | Date;
  CompanyID: number;
}

// ========== Statistics and Reporting Types ==========

export interface LeaseRevenueStatistics {
  periodSummary: {
    TotalContracts: number;
    TotalUnits: number;
    TotalRevenue: number;
    PostedRevenue: number;
    UnpostedRevenue: number;
    AverageRentPerDay: number;
  };
  propertyBreakdown: {
    PropertyID: number;
    PropertyName: string;
    UnitCount: number;
    TotalRevenue: number;
    PostedRevenue: number;
    UnpostedRevenue: number;
  }[];
  contractStatusSummary: {
    ContractStatus: string;
    ContractCount: number;
    UnitCount: number;
    TotalRevenue: number;
  }[];
  customerBreakdown: {
    CustomerID: number;
    CustomerName: string;
    ContractCount: number;
    UnitCount: number;
    TotalRevenue: number;
  }[];
}

export interface PostingSummary {
  PostingDate: string | Date;
  VoucherCount: number;
  TotalDebitAmount: number;
  TotalCreditAmount: number;
  ContractUnitCount: number;
  CompanyID: number;
  FiscalYearID: number;
  PostingStatus: string;
}

// ========== Dashboard Types ==========

export interface LeaseRevenueDashboardData {
  totalRevenue: number;
  postedRevenue: number;
  unpostedRevenue: number;
  currentMonthRevenue: number;
  previousMonthRevenue: number;
  averageRentPerDay: number;
  totalUnitsPosted: number;
  totalContractsProcessed: number;
  recentPostings: PostedLeaseRevenueEntry[];
  pendingPostings: LeaseRevenueData[];
  revenueTrends: {
    period: string;
    posted: number;
    unposted: number;
  }[];
  propertyPerformance: {
    propertyName: string;
    revenue: number;
    unitCount: number;
  }[];
}

// ========== Validation Types ==========

export interface PostingValidationResponse {
  IsValid: boolean;
  Errors: string[];
  Warnings: string[];
  ValidatedUnits: SelectedContractUnitForPosting[];
  TotalPostingAmount: number;
}

export interface RevenueCalculationValidation {
  ContractUnitID: number;
  IsValid: boolean;
  CalculatedAmount: number;
  ExpectedAmount: number;
  ValidationMessages: string[];
}

// ========== Response Types ==========

export interface ApiResponse<T = any> {
  Status: number;
  Message: string;
  VoucherNo?: string;
  ProcessedCount?: number;
  TotalAmount?: number;
  PostedCount?: number;
  FailedCount?: number;
  ReversalVoucherNo?: string;
  data?: T;
  [key: string]: any;
}

export interface LeaseRevenuePostingResponse {
  Status: number;
  Message: string;
  VoucherNo?: string;
  ProcessedCount: number;
  TotalAmount: number;
  PostingResults: PostingResult[];
}

export interface PostingResult {
  ContractUnitID: number;
  PostingID?: number;
  Status: boolean;
  Message: string;
}

export interface ReversalResponse {
  Status: number;
  Message: string;
  ReversalVoucherNo?: string;
  ReversedAmount: number;
  ReversedEntries: number;
}

// ========== Dropdown/Reference Types ==========

export interface Account {
  AccountID: number;
  AccountCode: string;
  AccountName: string;
  AccountTypeID: number;
  IsActive: boolean;
  IsPostable: boolean;
}

export interface Property {
  PropertyID: number;
  PropertyNo: string;
  PropertyName: string;
}

export interface Unit {
  UnitID: number;
  UnitNo: string;
  PropertyID: number;
  PropertyName?: string;
}

export interface Customer {
  CustomerID: number;
  CustomerNo: string;
  CustomerFullName: string;
}

export interface Contract {
  ContractID: number;
  ContractNo: string;
  CustomerID: number;
  CustomerName?: string;
  ContractStatus: string;
}

export interface Company {
  CompanyID: number;
  CompanyName: string;
}

export interface FiscalYear {
  FiscalYearID: number;
  FYCode: string;
  FYDescription: string;
  StartDate: string | Date;
  EndDate: string | Date;
  IsActive: boolean;
  IsClosed: boolean;
}

export interface Currency {
  CurrencyID: number;
  CurrencyCode: string;
  CurrencyName: string;
  ConversionRate?: number;
  IsDefault: boolean;
}

// ========== Export/Import Types ==========

export interface LeaseRevenueExportOptions {
  format: "CSV" | "Excel" | "PDF";
  includeHeaders: boolean;
  includePostingDetails: boolean;
  includeCalculations: boolean;
  dateFormat?: string;
}

export interface LeaseRevenueImportData {
  ContractUnitID: number;
  PeriodFrom: string | Date;
  PeriodTo: string | Date;
  PostingAmount: number;
  DebitAccountID: number;
  CreditAccountID: number;
  Narration?: string;
}

// ========== Constants and Enums ==========

export const POSTING_STATUS = {
  DRAFT: "Draft",
  POSTED: "Posted",
  REVERSED: "Reversed",
  FAILED: "Failed",
} as const;

export const TRANSACTION_TYPE = {
  DEBIT: "Debit",
  CREDIT: "Credit",
} as const;

export const CONTRACT_STATUS = {
  ACTIVE: "Active",
  COMPLETED: "Completed",
  EXPIRED: "Expired",
  CANCELLED: "Cancelled",
  TERMINATED: "Terminated",
} as const;

export const VOUCHER_TYPE = {
  LEASE_REVENUE: "Lease Revenue",
  LEASE_REVENUE_REVERSAL: "Lease Revenue Reversal",
} as const;

export const SOURCE_MODULE = {
  LEASE_REVENUE_POSTING: "Lease Revenue Posting",
} as const;

export const LEASE_REVENUE_MODES = {
  GET_LEASE_REVENUE_DATA: 1,
  PROCESS_LEASE_REVENUE_POSTING: 2,
  GET_POSTED_ENTRIES: 3,
  REVERSE_POSTING: 4,
} as const;

export type PostingStatus = (typeof POSTING_STATUS)[keyof typeof POSTING_STATUS];
export type TransactionType = (typeof TRANSACTION_TYPE)[keyof typeof TRANSACTION_TYPE];
export type ContractStatus = (typeof CONTRACT_STATUS)[keyof typeof CONTRACT_STATUS];
export type VoucherType = (typeof VOUCHER_TYPE)[keyof typeof VOUCHER_TYPE];
export type SourceModule = (typeof SOURCE_MODULE)[keyof typeof SOURCE_MODULE];
export type LeaseRevenueMode = (typeof LEASE_REVENUE_MODES)[keyof typeof LEASE_REVENUE_MODES];

// ========== Utility Types ==========

export interface RevenueSummary {
  PropertyID: number;
  PropertyName: string;
  TotalUnits: number;
  TotalRevenue: number;
  PostedRevenue: number;
  UnpostedRevenue: number;
  AverageRentPerDay: number;
  LastPostingDate?: string | Date;
}

export interface CustomerRevenueSummary {
  CustomerID: number;
  CustomerName: string;
  ContractCount: number;
  UnitCount: number;
  TotalRevenue: number;
  PostedRevenue: number;
  UnpostedRevenue: number;
  LastPostingDate?: string | Date;
}

export interface UnitRevenueDetail {
  ContractUnitID: number;
  UnitNo: string;
  PropertyName: string;
  CustomerName: string;
  ContractNo: string;
  StartDate: string | Date;
  EndDate: string | Date;
  DaysCalculated: number;
  RentPerDay: number;
  CalculatedRevenue: number;
  PostedAmount: number;
  UnpostedAmount: number;
  LastPostingDate?: string | Date;
}

export interface PostingAuditTrail {
  PostingID: number;
  VoucherNo: string;
  PostingDate: string | Date;
  ContractUnitID: number;
  UnitNo: string;
  CustomerName: string;
  PostingAmount: number;
  AccountCode: string;
  AccountName: string;
  TransactionType: string;
  PostedBy: string;
  PostedOn: string | Date;
  IsReversed: boolean;
  ReversalDate?: string | Date;
  ReversalReason?: string;
}
